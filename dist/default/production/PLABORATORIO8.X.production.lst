

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sat Apr 23 17:49:17 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.40
    25                           ; Generated 17/11/2021 GMT
    26                           ; 
    27                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F887 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  008F                     	;# 
   104  0090                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0097                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  0105                     	;# 
   123  0107                     	;# 
   124  0108                     	;# 
   125  0109                     	;# 
   126  010C                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  0185                     	;# 
   132  0187                     	;# 
   133  0188                     	;# 
   134  0189                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  008F                     	;# 
   182  0090                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0095                     	;# 
   190  0096                     	;# 
   191  0097                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009A                     	;# 
   195  009B                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  009F                     	;# 
   200  0105                     	;# 
   201  0107                     	;# 
   202  0108                     	;# 
   203  0109                     	;# 
   204  010C                     	;# 
   205  010C                     	;# 
   206  010D                     	;# 
   207  010E                     	;# 
   208  010F                     	;# 
   209  0185                     	;# 
   210  0187                     	;# 
   211  0188                     	;# 
   212  0189                     	;# 
   213  018C                     	;# 
   214  018D                     	;# 
   215                           
   216                           	psect	idataBANK0
   217  022E                     __pidataBANK0:
   218                           
   219                           ;initializer for _valores
   220  022E  343F               	retlw	63
   221  022F  3406               	retlw	6
   222  0230  345B               	retlw	91
   223  0231  344F               	retlw	79
   224  0232  3466               	retlw	102
   225  0233  346D               	retlw	109
   226  0234  347D               	retlw	125
   227  0235  3407               	retlw	7
   228  0236  347F               	retlw	127
   229  0237  3467               	retlw	103
   230  0006                     _PORTB	set	6
   231  0008                     _PORTD	set	8
   232  001E                     _ADRESH	set	30
   233  0005                     _PORTA	set	5
   234  001F                     _ADCON0bits	set	31
   235  000C                     _PIR1bits	set	12
   236  0007                     _PORTCbits	set	7
   237  0009                     _PORTEbits	set	9
   238  0007                     _PORTC	set	7
   239  0009                     _PORTE	set	9
   240  0001                     _TMR0	set	1
   241  000B                     _INTCONbits	set	11
   242  008C                     _PIE1bits	set	140
   243  009F                     _ADCON1bits	set	159
   244  0081                     _OPTION_REGbits	set	129
   245  008F                     _OSCCONbits	set	143
   246  0089                     _TRISE	set	137
   247  0088                     _TRISD	set	136
   248  0087                     _TRISC	set	135
   249  0086                     _TRISB	set	134
   250  0085                     _TRISA	set	133
   251  0189                     _ANSELH	set	393
   252  0188                     _ANSEL	set	392
   253                           
   254                           	psect	cinit
   255  0011                     start_initialization:	
   256                           ; #config settings
   257                           
   258  0011                     __initialization:
   259                           
   260                           ; Initialize objects allocated to BANK0
   261  0011  1383               	bcf	3,7	;select IRP bank0
   262  0012  303E               	movlw	low (__pdataBANK0+10)
   263  0013  00FD               	movwf	btemp+-1
   264  0014  3002               	movlw	high __pidataBANK0
   265  0015  00FE               	movwf	btemp
   266  0016  302E               	movlw	low __pidataBANK0
   267  0017  00FF               	movwf	btemp+1
   268  0018  3034               	movlw	low __pdataBANK0
   269  0019  0084               	movwf	4
   270  001A  120A  118A  221F  120A  118A  	fcall	init_ram0
   271                           
   272                           ; Clear objects allocated to BANK0
   273  001F  01BE               	clrf	__pbssBANK0& (0+127)
   274  0020  01BF               	clrf	(__pbssBANK0+1)& (0+127)
   275  0021  01C0               	clrf	(__pbssBANK0+2)& (0+127)
   276  0022  01C1               	clrf	(__pbssBANK0+3)& (0+127)
   277  0023  01C2               	clrf	(__pbssBANK0+4)& (0+127)
   278  0024  01C3               	clrf	(__pbssBANK0+5)& (0+127)
   279                           
   280                           ; Clear objects allocated to COMMON
   281  0025  01F5               	clrf	__pbssCOMMON& (0+127)
   282  0026  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   283  0027  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   284  0028  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   285  0029                     end_of_initialization:	
   286                           ;End of C runtime variable initialization code
   287                           
   288  0029                     __end_of__initialization:
   289  0029  0183               	clrf	3
   290  002A  120A  118A  29AB   	ljmp	_main	;jump to C main() function
   291                           
   292                           	psect	bssCOMMON
   293  0075                     __pbssCOMMON:
   294  0075                     _ttmr0:
   295  0075                     	ds	1
   296  0076                     _CEN:
   297  0076                     	ds	1
   298  0077                     _DECC:
   299  0077                     	ds	1
   300  0078                     _UNI:
   301  0078                     	ds	1
   302                           
   303                           	psect	bssBANK0
   304  003E                     __pbssBANK0:
   305  003E                     _SENAL2:
   306  003E                     	ds	2
   307  0040                     _SENAL:
   308  0040                     	ds	2
   309  0042                     _POTENCIOMETRO:
   310  0042                     	ds	2
   311                           
   312                           	psect	dataBANK0
   313  0034                     __pdataBANK0:
   314  0034                     _valores:
   315  0034                     	ds	10
   316                           
   317                           	psect	inittext
   318  021B                     init_fetch0:	
   319                           ;	Called with low address in FSR and high address in W
   320                           
   321  021B  087E               	movf	btemp,w
   322  021C  008A               	movwf	10
   323  021D  087F               	movf	btemp+1,w
   324  021E  0082               	movwf	2
   325  021F                     init_ram0:	
   326                           ;Called with:
   327                           ;	high address of idata address in btemp 
   328                           ;	low address of idata address in btemp+1 
   329                           ;	low address of data in FSR
   330                           ;	high address + 1 of data in btemp-1
   331                           
   332  021F  120A  118A  221B  120A  118A  	fcall	init_fetch0
   333  0224  0080               	movwf	0
   334  0225  0A84               	incf	4,f
   335  0226  0804               	movf	4,w
   336  0227  067D               	xorwf	btemp+-1,w
   337  0228  1903               	btfsc	3,2
   338  0229  3400               	retlw	0
   339  022A  0AFF               	incf	btemp+1,f
   340  022B  1903               	btfsc	3,2
   341  022C  0AFE               	incf	btemp,f
   342  022D  2A1F               	goto	init_ram0
   343                           
   344                           	psect	cstackCOMMON
   345  0070                     __pcstackCOMMON:
   346  0070                     ?_setup:
   347  0070                     ?_calculos:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ?_isr:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     ??_isr:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ?_main:	
   357                           ; 1 bytes @ 0x0
   358                           
   359                           
   360                           ; 1 bytes @ 0x0
   361  0070                     	ds	5
   362  0075                     ??_setup:
   363  0075                     ??___wmul:	
   364                           ; 1 bytes @ 0x5
   365                           
   366                           
   367                           	psect	cstackBANK0
   368  0020                     __pcstackBANK0:	
   369                           ; 1 bytes @ 0x5
   370                           
   371  0020                     ?___bmul:
   372  0020                     ?___wmul:	
   373                           ; 1 bytes @ 0x0
   374                           
   375  0020                     ___bmul@multiplicand:	
   376                           ; 2 bytes @ 0x0
   377                           
   378  0020                     ___wmul@multiplier:	
   379                           ; 1 bytes @ 0x0
   380                           
   381                           
   382                           ; 2 bytes @ 0x0
   383  0020                     	ds	1
   384  0021                     ??___bmul:
   385                           
   386                           ; 1 bytes @ 0x1
   387  0021                     	ds	1
   388  0022                     ___bmul@product:
   389  0022                     ___wmul@multiplicand:	
   390                           ; 1 bytes @ 0x2
   391                           
   392                           
   393                           ; 2 bytes @ 0x2
   394  0022                     	ds	1
   395  0023                     ___bmul@multiplier:
   396                           
   397                           ; 1 bytes @ 0x3
   398  0023                     	ds	1
   399  0024                     ___wmul@product:
   400                           
   401                           ; 2 bytes @ 0x4
   402  0024                     	ds	2
   403  0026                     ?___awdiv:
   404  0026                     ___awdiv@divisor:	
   405                           ; 2 bytes @ 0x6
   406                           
   407                           
   408                           ; 2 bytes @ 0x6
   409  0026                     	ds	2
   410  0028                     ___awdiv@dividend:
   411                           
   412                           ; 2 bytes @ 0x8
   413  0028                     	ds	2
   414  002A                     ??___awdiv:
   415                           
   416                           ; 1 bytes @ 0xA
   417  002A                     	ds	1
   418  002B                     ___awdiv@counter:
   419                           
   420                           ; 1 bytes @ 0xB
   421  002B                     	ds	1
   422  002C                     ___awdiv@sign:
   423                           
   424                           ; 1 bytes @ 0xC
   425  002C                     	ds	1
   426  002D                     ___awdiv@quotient:
   427                           
   428                           ; 2 bytes @ 0xD
   429  002D                     	ds	2
   430  002F                     ??_calculos:
   431                           
   432                           ; 1 bytes @ 0xF
   433  002F                     	ds	4
   434  0033                     ??_main:
   435                           
   436                           ; 1 bytes @ 0x13
   437  0033                     	ds	1
   438                           
   439                           	psect	maintext
   440  01AB                     __pmaintext:	
   441 ;;
   442 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   443 ;;
   444 ;; *************** function _main *****************
   445 ;; Defined at:
   446 ;;		line 85 in file "main.c"
   447 ;; Parameters:    Size  Location     Type
   448 ;;		None
   449 ;; Auto vars:     Size  Location     Type
   450 ;;		None
   451 ;; Return value:  Size  Location     Type
   452 ;;                  1    wreg      void 
   453 ;; Registers used:
   454 ;;		wreg, status,2, status,0, pclath, cstack
   455 ;; Tracked objects:
   456 ;;		On entry : B00/0
   457 ;;		On exit  : 0/0
   458 ;;		Unchanged: 0/0
   459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   460 ;;      Params:         0       0       0       0       0
   461 ;;      Locals:         0       0       0       0       0
   462 ;;      Temps:          0       1       0       0       0
   463 ;;      Totals:         0       1       0       0       0
   464 ;;Total ram usage:        1 bytes
   465 ;; Hardware stack levels required when called: 3
   466 ;; This function calls:
   467 ;;		_calculos
   468 ;;		_setup
   469 ;; This function is called by:
   470 ;;		Startup code after reset
   471 ;; This function uses a non-reentrant model
   472 ;;
   473                           
   474  01AB                     _main:	
   475                           ;psect for function _main
   476                           
   477  01AB                     l1169:	
   478                           ;incstack = 0
   479                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   480                           
   481                           
   482                           ;main.c: 86:     setup();
   483  01AB  120A  118A  216A  120A  118A  	fcall	_setup
   484  01B0                     l1171:
   485                           
   486                           ;main.c: 87:     _delay((unsigned long)((50)*(500000/4000000.0)));
   487  01B0  29B1               	nop2	;2 cycle nop
   488  01B1  29B2               	nop2	;2 cycle nop
   489  01B2  29B3               	nop2	;2 cycle nop
   490  01B3                     l1173:
   491                           
   492                           ;main.c: 88:     ADCON0bits.GO = 1;
   493  01B3  1283               	bcf	3,5	;RP0=0, select bank0
   494  01B4  1303               	bcf	3,6	;RP1=0, select bank0
   495  01B5  149F               	bsf	31,1	;volatile
   496  01B6                     l1175:
   497                           
   498                           ;main.c: 90:         if(ADCON0bits.GO == 0){
   499  01B6  1283               	bcf	3,5	;RP0=0, select bank0
   500  01B7  1303               	bcf	3,6	;RP1=0, select bank0
   501  01B8  189F               	btfsc	31,1	;volatile
   502  01B9  29BB               	goto	u491
   503  01BA  29BC               	goto	u490
   504  01BB                     u491:
   505  01BB  29D4               	goto	l1187
   506  01BC                     u490:
   507  01BC                     l1177:
   508                           
   509                           ;main.c: 91:             if(ADCON0bits.CHS == 11)
   510  01BC  0C1F               	rrf	31,w	;volatile
   511  01BD  00B3               	movwf	??_main
   512  01BE  0C33               	rrf	??_main,w
   513  01BF  390F               	andlw	15
   514  01C0  3A0B               	xorlw	11
   515  01C1  1D03               	skipz
   516  01C2  29C4               	goto	u501
   517  01C3  29C5               	goto	u500
   518  01C4                     u501:
   519  01C4  29CA               	goto	l1181
   520  01C5                     u500:
   521  01C5                     l1179:
   522                           
   523                           ;main.c: 92:                 ADCON0bits.CHS = 10;
   524  01C5  081F               	movf	31,w	;volatile
   525  01C6  39C3               	andlw	-61
   526  01C7  3828               	iorlw	40
   527  01C8  009F               	movwf	31	;volatile
   528  01C9  29CE               	goto	l1183
   529  01CA                     l1181:
   530                           
   531                           ;main.c: 94:                 ADCON0bits.CHS = 11;
   532  01CA  081F               	movf	31,w	;volatile
   533  01CB  39C3               	andlw	-61
   534  01CC  382C               	iorlw	44
   535  01CD  009F               	movwf	31	;volatile
   536  01CE                     l1183:
   537                           
   538                           ;main.c: 95:             _delay((unsigned long)((50)*(500000/4000000.0)));
   539  01CE  29CF               	nop2	;2 cycle nop
   540  01CF  29D0               	nop2	;2 cycle nop
   541  01D0  29D1               	nop2	;2 cycle nop
   542  01D1                     l1185:
   543                           
   544                           ;main.c: 96:             ADCON0bits.GO = 1;
   545  01D1  1283               	bcf	3,5	;RP0=0, select bank0
   546  01D2  1303               	bcf	3,6	;RP1=0, select bank0
   547  01D3  149F               	bsf	31,1	;volatile
   548  01D4                     l1187:
   549                           
   550                           ;main.c: 98:         calculos();
   551  01D4  120A  118A  202D  120A  118A  	fcall	_calculos
   552  01D9  29B6               	goto	l1175
   553  01DA  120A  118A  280E   	ljmp	start
   554  01DD                     __end_of_main:
   555                           
   556                           	psect	text1
   557  016A                     __ptext1:	
   558 ;; *************** function _setup *****************
   559 ;; Defined at:
   560 ;;		line 113 in file "main.c"
   561 ;; Parameters:    Size  Location     Type
   562 ;;		None
   563 ;; Auto vars:     Size  Location     Type
   564 ;;		None
   565 ;; Return value:  Size  Location     Type
   566 ;;                  1    wreg      void 
   567 ;; Registers used:
   568 ;;		wreg, status,2, status,0
   569 ;; Tracked objects:
   570 ;;		On entry : 0/0
   571 ;;		On exit  : 0/0
   572 ;;		Unchanged: 0/0
   573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   574 ;;      Params:         0       0       0       0       0
   575 ;;      Locals:         0       0       0       0       0
   576 ;;      Temps:          0       0       0       0       0
   577 ;;      Totals:         0       0       0       0       0
   578 ;;Total ram usage:        0 bytes
   579 ;; Hardware stack levels used: 1
   580 ;; Hardware stack levels required when called: 1
   581 ;; This function calls:
   582 ;;		Nothing
   583 ;; This function is called by:
   584 ;;		_main
   585 ;; This function uses a non-reentrant model
   586 ;;
   587                           
   588  016A                     _setup:	
   589                           ;psect for function _setup
   590                           
   591  016A                     l763:	
   592                           ;incstack = 0
   593                           ; Regs used in _setup: [wreg+status,2+status,0]
   594                           
   595                           
   596                           ;main.c: 114:     ANSEL = 0;
   597  016A  1683               	bsf	3,5	;RP0=1, select bank3
   598  016B  1703               	bsf	3,6	;RP1=1, select bank3
   599  016C  0188               	clrf	8	;volatile
   600  016D                     l765:
   601                           
   602                           ;main.c: 115:     ANSELH = 0b1100;
   603  016D  300C               	movlw	12
   604  016E  0089               	movwf	9	;volatile
   605  016F                     l767:
   606                           
   607                           ;main.c: 117:     TRISA = 0;
   608  016F  1683               	bsf	3,5	;RP0=1, select bank1
   609  0170  1303               	bcf	3,6	;RP1=0, select bank1
   610  0171  0185               	clrf	5	;volatile
   611                           
   612                           ;main.c: 118:     TRISB = 1;
   613  0172  3001               	movlw	1
   614  0173  0086               	movwf	6	;volatile
   615  0174                     l769:
   616                           
   617                           ;main.c: 120:     TRISC = 0;
   618  0174  0187               	clrf	7	;volatile
   619  0175                     l771:
   620                           
   621                           ;main.c: 121:     TRISD = 0;
   622  0175  0188               	clrf	8	;volatile
   623  0176                     l773:
   624                           
   625                           ;main.c: 122:     TRISE = 0;
   626  0176  0189               	clrf	9	;volatile
   627  0177                     l775:
   628                           
   629                           ;main.c: 124:     PORTA = 0;
   630  0177  1283               	bcf	3,5	;RP0=0, select bank0
   631  0178  1303               	bcf	3,6	;RP1=0, select bank0
   632  0179  0185               	clrf	5	;volatile
   633  017A                     l777:
   634                           
   635                           ;main.c: 125:     PORTB = 0;
   636  017A  0186               	clrf	6	;volatile
   637  017B                     l779:
   638                           
   639                           ;main.c: 126:     PORTC = 0;
   640  017B  0187               	clrf	7	;volatile
   641  017C                     l781:
   642                           
   643                           ;main.c: 127:     PORTD = 0;
   644  017C  0188               	clrf	8	;volatile
   645  017D                     l783:
   646                           
   647                           ;main.c: 128:     PORTE = 0;
   648  017D  0189               	clrf	9	;volatile
   649  017E                     l785:
   650                           
   651                           ;main.c: 130:     OSCCONbits.IRCF = 0b0011;
   652  017E  1683               	bsf	3,5	;RP0=1, select bank1
   653  017F  1303               	bcf	3,6	;RP1=0, select bank1
   654  0180  080F               	movf	15,w	;volatile
   655  0181  398F               	andlw	-113
   656  0182  3830               	iorlw	48
   657  0183  008F               	movwf	15	;volatile
   658  0184                     l787:
   659                           
   660                           ;main.c: 131:     OSCCONbits.SCS = 1;
   661  0184  140F               	bsf	15,0	;volatile
   662  0185                     l789:
   663                           
   664                           ;main.c: 134:     OPTION_REGbits.T0CS = 0;
   665  0185  1281               	bcf	1,5	;volatile
   666  0186                     l791:
   667                           
   668                           ;main.c: 135:     OPTION_REGbits.T0SE = 0;
   669  0186  1201               	bcf	1,4	;volatile
   670  0187                     l793:
   671                           
   672                           ;main.c: 136:     OPTION_REGbits.PSA = 0;
   673  0187  1181               	bcf	1,3	;volatile
   674  0188                     l795:
   675                           
   676                           ;main.c: 137:     OPTION_REGbits.PS2 = 1;
   677  0188  1501               	bsf	1,2	;volatile
   678  0189                     l797:
   679                           
   680                           ;main.c: 138:     OPTION_REGbits.PS1 = 1;
   681  0189  1481               	bsf	1,1	;volatile
   682  018A                     l799:
   683                           
   684                           ;main.c: 139:     OPTION_REGbits.PS0 = 1;
   685  018A  1401               	bsf	1,0	;volatile
   686  018B                     l801:
   687                           
   688                           ;main.c: 140:     TMR0 = 255;
   689  018B  30FF               	movlw	255
   690  018C  1283               	bcf	3,5	;RP0=0, select bank0
   691  018D  1303               	bcf	3,6	;RP1=0, select bank0
   692  018E  0081               	movwf	1	;volatile
   693  018F                     l803:
   694                           
   695                           ;main.c: 142:     INTCONbits.T0IF = 0;
   696  018F  110B               	bcf	11,2	;volatile
   697  0190                     l805:
   698                           
   699                           ;main.c: 143:     INTCONbits.T0IE = 1;
   700  0190  168B               	bsf	11,5	;volatile
   701                           
   702                           ;main.c: 145:     ADCON0bits.ADCS = 0b00;
   703  0191  303F               	movlw	-193
   704  0192  059F               	andwf	31,f	;volatile
   705                           
   706                           ;main.c: 146:     ADCON0bits.CHS = 10;
   707  0193  081F               	movf	31,w	;volatile
   708  0194  39C3               	andlw	-61
   709  0195  3828               	iorlw	40
   710  0196  009F               	movwf	31	;volatile
   711  0197                     l807:
   712                           
   713                           ;main.c: 148:     ADCON1bits.ADFM = 0;
   714  0197  1683               	bsf	3,5	;RP0=1, select bank1
   715  0198  1303               	bcf	3,6	;RP1=0, select bank1
   716  0199  139F               	bcf	31,7	;volatile
   717  019A                     l809:
   718                           
   719                           ;main.c: 149:     ADCON1bits.VCFG0 = 0;
   720  019A  121F               	bcf	31,4	;volatile
   721  019B                     l811:
   722                           
   723                           ;main.c: 150:     ADCON1bits.VCFG1 = 0;
   724  019B  129F               	bcf	31,5	;volatile
   725  019C                     l813:
   726                           
   727                           ;main.c: 152:     PIR1bits.ADIF = 0;
   728  019C  1283               	bcf	3,5	;RP0=0, select bank0
   729  019D  1303               	bcf	3,6	;RP1=0, select bank0
   730  019E  130C               	bcf	12,6	;volatile
   731  019F                     l815:
   732                           
   733                           ;main.c: 153:     PIE1bits.ADIE = 1;
   734  019F  1683               	bsf	3,5	;RP0=1, select bank1
   735  01A0  1303               	bcf	3,6	;RP1=0, select bank1
   736  01A1  170C               	bsf	12,6	;volatile
   737  01A2                     l817:
   738                           
   739                           ;main.c: 154:     INTCONbits.PEIE = 1;
   740  01A2  170B               	bsf	11,6	;volatile
   741  01A3                     l819:
   742                           
   743                           ;main.c: 155:     INTCONbits.GIE = 1;
   744  01A3  178B               	bsf	11,7	;volatile
   745  01A4                     l821:
   746                           
   747                           ;main.c: 157:     _delay((unsigned long)((50)*(500000/4000000.0)));
   748  01A4  29A5               	nop2	;2 cycle nop
   749  01A5  29A6               	nop2	;2 cycle nop
   750  01A6  29A7               	nop2	;2 cycle nop
   751  01A7                     l823:
   752                           
   753                           ;main.c: 158:     ADCON0bits.ADON = 1;
   754  01A7  1283               	bcf	3,5	;RP0=0, select bank0
   755  01A8  1303               	bcf	3,6	;RP1=0, select bank0
   756  01A9  141F               	bsf	31,0	;volatile
   757  01AA                     l99:
   758  01AA  0008               	return
   759  01AB                     __end_of_setup:
   760                           
   761                           	psect	text2
   762  002D                     __ptext2:	
   763 ;; *************** function _calculos *****************
   764 ;; Defined at:
   765 ;;		line 102 in file "main.c"
   766 ;; Parameters:    Size  Location     Type
   767 ;;		None
   768 ;; Auto vars:     Size  Location     Type
   769 ;;		None
   770 ;; Return value:  Size  Location     Type
   771 ;;                  1    wreg      void 
   772 ;; Registers used:
   773 ;;		wreg, status,2, status,0, pclath, cstack
   774 ;; Tracked objects:
   775 ;;		On entry : 0/0
   776 ;;		On exit  : 0/0
   777 ;;		Unchanged: 0/0
   778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   779 ;;      Params:         0       0       0       0       0
   780 ;;      Locals:         0       0       0       0       0
   781 ;;      Temps:          0       4       0       0       0
   782 ;;      Totals:         0       4       0       0       0
   783 ;;Total ram usage:        4 bytes
   784 ;; Hardware stack levels used: 1
   785 ;; Hardware stack levels required when called: 2
   786 ;; This function calls:
   787 ;;		___awdiv
   788 ;;		___bmul
   789 ;;		___wmul
   790 ;; This function is called by:
   791 ;;		_main
   792 ;; This function uses a non-reentrant model
   793 ;;
   794                           
   795  002D                     _calculos:	
   796                           ;psect for function _calculos
   797                           
   798  002D                     l1155:	
   799                           ;incstack = 0
   800                           ; Regs used in _calculos: [wreg+status,2+status,0+pclath+cstack]
   801                           
   802                           
   803                           ;main.c: 103:     SENAL = PORTD;
   804  002D  1283               	bcf	3,5	;RP0=0, select bank0
   805  002E  1303               	bcf	3,6	;RP1=0, select bank0
   806  002F  0808               	movf	8,w	;volatile
   807  0030  00AF               	movwf	??_calculos
   808  0031  01B0               	clrf	??_calculos+1
   809  0032  082F               	movf	??_calculos,w
   810  0033  00C0               	movwf	_SENAL
   811  0034  0830               	movf	??_calculos+1,w
   812  0035  00C1               	movwf	_SENAL+1
   813  0036                     l1157:
   814                           
   815                           ;main.c: 104:     POTENCIOMETRO = (SENAL << 2);
   816  0036  0841               	movf	_SENAL+1,w
   817  0037  00B0               	movwf	??_calculos+1
   818  0038  0840               	movf	_SENAL,w
   819  0039  00AF               	movwf	??_calculos
   820  003A  1003               	clrc
   821  003B  0DAF               	rlf	??_calculos,f
   822  003C  0DB0               	rlf	??_calculos+1,f
   823  003D  1003               	clrc
   824  003E  0DAF               	rlf	??_calculos,f
   825  003F  0DB0               	rlf	??_calculos+1,f
   826  0040  082F               	movf	??_calculos,w
   827  0041  00C2               	movwf	_POTENCIOMETRO
   828  0042  0830               	movf	??_calculos+1,w
   829  0043  00C3               	movwf	_POTENCIOMETRO+1
   830  0044                     l1159:
   831                           
   832                           ;main.c: 105:     SENAL2 = POTENCIOMETRO >> 1;
   833  0044  0D43               	rlf	_POTENCIOMETRO+1,w
   834  0045  0C43               	rrf	_POTENCIOMETRO+1,w
   835  0046  00BF               	movwf	_SENAL2+1
   836  0047  0C42               	rrf	_POTENCIOMETRO,w
   837  0048  00BE               	movwf	_SENAL2
   838  0049                     l1161:
   839                           
   840                           ;main.c: 107:     CEN = SENAL2/100;
   841  0049  3064               	movlw	100
   842  004A  00A6               	movwf	___awdiv@divisor
   843  004B  3000               	movlw	0
   844  004C  00A7               	movwf	___awdiv@divisor+1
   845  004D  083F               	movf	_SENAL2+1,w
   846  004E  00A9               	movwf	___awdiv@dividend+1
   847  004F  083E               	movf	_SENAL2,w
   848  0050  00A8               	movwf	___awdiv@dividend
   849  0051  120A  118A  20A4  120A  118A  	fcall	___awdiv
   850  0056  1283               	bcf	3,5	;RP0=0, select bank0
   851  0057  1303               	bcf	3,6	;RP1=0, select bank0
   852  0058  0826               	movf	?___awdiv,w
   853  0059  00AF               	movwf	??_calculos
   854  005A  082F               	movf	??_calculos,w
   855  005B  00F6               	movwf	_CEN
   856  005C                     l1163:
   857                           
   858                           ;main.c: 108:     DECC = (SENAL2-(CEN*100))/10;
   859  005C  300A               	movlw	10
   860  005D  00A6               	movwf	___awdiv@divisor
   861  005E  3000               	movlw	0
   862  005F  00A7               	movwf	___awdiv@divisor+1
   863  0060  0876               	movf	_CEN,w
   864  0061  00AF               	movwf	??_calculos
   865  0062  01B0               	clrf	??_calculos+1
   866  0063  082F               	movf	??_calculos,w
   867  0064  00A0               	movwf	___wmul@multiplier
   868  0065  0830               	movf	??_calculos+1,w
   869  0066  00A1               	movwf	___wmul@multiplier+1
   870  0067  309C               	movlw	156
   871  0068  00A2               	movwf	___wmul@multiplicand
   872  0069  30FF               	movlw	255
   873  006A  00A3               	movwf	___wmul@multiplicand+1
   874  006B  120A  118A  21DD  120A  118A  	fcall	___wmul
   875  0070  1283               	bcf	3,5	;RP0=0, select bank0
   876  0071  1303               	bcf	3,6	;RP1=0, select bank0
   877  0072  083E               	movf	_SENAL2,w
   878  0073  0720               	addwf	?___wmul,w
   879  0074  00A8               	movwf	___awdiv@dividend
   880  0075  083F               	movf	_SENAL2+1,w
   881  0076  1803               	skipnc
   882  0077  0A3F               	incf	_SENAL2+1,w
   883  0078  0721               	addwf	?___wmul+1,w
   884  0079  00A9               	movwf	___awdiv@dividend+1
   885  007A  120A  118A  20A4  120A  118A  	fcall	___awdiv
   886  007F  1283               	bcf	3,5	;RP0=0, select bank0
   887  0080  1303               	bcf	3,6	;RP1=0, select bank0
   888  0081  0826               	movf	?___awdiv,w
   889  0082  00B1               	movwf	??_calculos+2
   890  0083  0831               	movf	??_calculos+2,w
   891  0084  00F7               	movwf	_DECC
   892  0085                     l1165:
   893                           
   894                           ;main.c: 109:     UNI = (SENAL2-(CEN*100+DECC*10));
   895  0085  309C               	movlw	156
   896  0086  00AF               	movwf	??_calculos
   897  0087  082F               	movf	??_calculos,w
   898  0088  00A0               	movwf	___bmul@multiplicand
   899  0089  0876               	movf	_CEN,w
   900  008A  120A  118A  2204  120A  118A  	fcall	___bmul
   901  008F  1283               	bcf	3,5	;RP0=0, select bank0
   902  0090  1303               	bcf	3,6	;RP1=0, select bank0
   903  0091  00B0               	movwf	??_calculos+1
   904  0092  30F6               	movlw	246
   905  0093  00B1               	movwf	??_calculos+2
   906  0094  0831               	movf	??_calculos+2,w
   907  0095  00A0               	movwf	___bmul@multiplicand
   908  0096  0877               	movf	_DECC,w
   909  0097  120A  118A  2204  120A  118A  	fcall	___bmul
   910  009C  1283               	bcf	3,5	;RP0=0, select bank0
   911  009D  1303               	bcf	3,6	;RP1=0, select bank0
   912  009E  0730               	addwf	??_calculos+1,w
   913  009F  073E               	addwf	_SENAL2,w
   914  00A0  00B2               	movwf	??_calculos+3
   915  00A1  0832               	movf	??_calculos+3,w
   916  00A2  00F8               	movwf	_UNI
   917  00A3                     l96:
   918  00A3  0008               	return
   919  00A4                     __end_of_calculos:
   920                           
   921                           	psect	text3
   922  01DD                     __ptext3:	
   923 ;; *************** function ___wmul *****************
   924 ;; Defined at:
   925 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul16.c"
   926 ;; Parameters:    Size  Location     Type
   927 ;;  multiplier      2    0[BANK0 ] unsigned int 
   928 ;;  multiplicand    2    2[BANK0 ] unsigned int 
   929 ;; Auto vars:     Size  Location     Type
   930 ;;  product         2    4[BANK0 ] unsigned int 
   931 ;; Return value:  Size  Location     Type
   932 ;;                  2    0[BANK0 ] unsigned int 
   933 ;; Registers used:
   934 ;;		wreg, status,2, status,0
   935 ;; Tracked objects:
   936 ;;		On entry : 0/0
   937 ;;		On exit  : 0/0
   938 ;;		Unchanged: 0/0
   939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   940 ;;      Params:         0       4       0       0       0
   941 ;;      Locals:         0       2       0       0       0
   942 ;;      Temps:          0       0       0       0       0
   943 ;;      Totals:         0       6       0       0       0
   944 ;;Total ram usage:        6 bytes
   945 ;; Hardware stack levels used: 1
   946 ;; Hardware stack levels required when called: 1
   947 ;; This function calls:
   948 ;;		Nothing
   949 ;; This function is called by:
   950 ;;		_calculos
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954  01DD                     ___wmul:	
   955                           ;psect for function ___wmul
   956                           
   957  01DD                     l1127:	
   958                           ;incstack = 0
   959                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   960                           
   961  01DD  1283               	bcf	3,5	;RP0=0, select bank0
   962  01DE  1303               	bcf	3,6	;RP1=0, select bank0
   963  01DF  01A4               	clrf	___wmul@product
   964  01E0  01A5               	clrf	___wmul@product+1
   965  01E1                     l1129:
   966  01E1  1C20               	btfss	___wmul@multiplier,0
   967  01E2  29E4               	goto	u431
   968  01E3  29E5               	goto	u430
   969  01E4                     u431:
   970  01E4  29EB               	goto	l185
   971  01E5                     u430:
   972  01E5                     l1131:
   973  01E5  0822               	movf	___wmul@multiplicand,w
   974  01E6  07A4               	addwf	___wmul@product,f
   975  01E7  1803               	skipnc
   976  01E8  0AA5               	incf	___wmul@product+1,f
   977  01E9  0823               	movf	___wmul@multiplicand+1,w
   978  01EA  07A5               	addwf	___wmul@product+1,f
   979  01EB                     l185:
   980  01EB  3001               	movlw	1
   981  01EC                     u445:
   982  01EC  1003               	clrc
   983  01ED  0DA2               	rlf	___wmul@multiplicand,f
   984  01EE  0DA3               	rlf	___wmul@multiplicand+1,f
   985  01EF  3EFF               	addlw	-1
   986  01F0  1D03               	skipz
   987  01F1  29EC               	goto	u445
   988  01F2                     l1133:
   989  01F2  3001               	movlw	1
   990  01F3                     u455:
   991  01F3  1003               	clrc
   992  01F4  0CA1               	rrf	___wmul@multiplier+1,f
   993  01F5  0CA0               	rrf	___wmul@multiplier,f
   994  01F6  3EFF               	addlw	-1
   995  01F7  1D03               	skipz
   996  01F8  29F3               	goto	u455
   997  01F9                     l1135:
   998  01F9  0820               	movf	___wmul@multiplier,w
   999  01FA  0421               	iorwf	___wmul@multiplier+1,w
  1000  01FB  1D03               	btfss	3,2
  1001  01FC  29FE               	goto	u461
  1002  01FD  29FF               	goto	u460
  1003  01FE                     u461:
  1004  01FE  29E1               	goto	l1129
  1005  01FF                     u460:
  1006  01FF                     l1137:
  1007  01FF  0825               	movf	___wmul@product+1,w
  1008  0200  00A1               	movwf	?___wmul+1
  1009  0201  0824               	movf	___wmul@product,w
  1010  0202  00A0               	movwf	?___wmul
  1011  0203                     l187:
  1012  0203  0008               	return
  1013  0204                     __end_of___wmul:
  1014                           
  1015                           	psect	text4
  1016  0204                     __ptext4:	
  1017 ;; *************** function ___bmul *****************
  1018 ;; Defined at:
  1019 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul8.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;  multiplier      1    wreg     unsigned char 
  1022 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;  multiplier      1    3[BANK0 ] unsigned char 
  1025 ;;  product         1    2[BANK0 ] unsigned char 
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  1    wreg      unsigned char 
  1028 ;; Registers used:
  1029 ;;		wreg, status,2, status,0
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1035 ;;      Params:         0       1       0       0       0
  1036 ;;      Locals:         0       2       0       0       0
  1037 ;;      Temps:          0       1       0       0       0
  1038 ;;      Totals:         0       4       0       0       0
  1039 ;;Total ram usage:        4 bytes
  1040 ;; Hardware stack levels used: 1
  1041 ;; Hardware stack levels required when called: 1
  1042 ;; This function calls:
  1043 ;;		Nothing
  1044 ;; This function is called by:
  1045 ;;		_calculos
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049  0204                     ___bmul:	
  1050                           ;psect for function ___bmul
  1051                           
  1052                           
  1053                           ;incstack = 0
  1054                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1055                           ;___bmul@multiplier stored from wreg
  1056  0204  1283               	bcf	3,5	;RP0=0, select bank0
  1057  0205  1303               	bcf	3,6	;RP1=0, select bank0
  1058  0206  00A3               	movwf	___bmul@multiplier
  1059  0207                     l1141:
  1060  0207  01A2               	clrf	___bmul@product
  1061  0208                     l1143:
  1062  0208  1C23               	btfss	___bmul@multiplier,0
  1063  0209  2A0B               	goto	u471
  1064  020A  2A0C               	goto	u470
  1065  020B                     u471:
  1066  020B  2A10               	goto	l1147
  1067  020C                     u470:
  1068  020C                     l1145:
  1069  020C  0820               	movf	___bmul@multiplicand,w
  1070  020D  00A1               	movwf	??___bmul
  1071  020E  0821               	movf	??___bmul,w
  1072  020F  07A2               	addwf	___bmul@product,f
  1073  0210                     l1147:
  1074  0210  1003               	clrc
  1075  0211  0DA0               	rlf	___bmul@multiplicand,f
  1076  0212                     l1149:
  1077  0212  1003               	clrc
  1078  0213  0CA3               	rrf	___bmul@multiplier,f
  1079  0214  0823               	movf	___bmul@multiplier,w
  1080  0215  1D03               	btfss	3,2
  1081  0216  2A18               	goto	u481
  1082  0217  2A19               	goto	u480
  1083  0218                     u481:
  1084  0218  2A08               	goto	l1143
  1085  0219                     u480:
  1086  0219                     l1151:
  1087  0219  0822               	movf	___bmul@product,w
  1088  021A                     l211:
  1089  021A  0008               	return
  1090  021B                     __end_of___bmul:
  1091                           
  1092                           	psect	text5
  1093  00A4                     __ptext5:	
  1094 ;; *************** function ___awdiv *****************
  1095 ;; Defined at:
  1096 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\awdiv.c"
  1097 ;; Parameters:    Size  Location     Type
  1098 ;;  divisor         2    6[BANK0 ] int 
  1099 ;;  dividend        2    8[BANK0 ] int 
  1100 ;; Auto vars:     Size  Location     Type
  1101 ;;  quotient        2   13[BANK0 ] int 
  1102 ;;  sign            1   12[BANK0 ] unsigned char 
  1103 ;;  counter         1   11[BANK0 ] unsigned char 
  1104 ;; Return value:  Size  Location     Type
  1105 ;;                  2    6[BANK0 ] int 
  1106 ;; Registers used:
  1107 ;;		wreg, status,2, status,0
  1108 ;; Tracked objects:
  1109 ;;		On entry : 0/0
  1110 ;;		On exit  : 0/0
  1111 ;;		Unchanged: 0/0
  1112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1113 ;;      Params:         0       4       0       0       0
  1114 ;;      Locals:         0       4       0       0       0
  1115 ;;      Temps:          0       1       0       0       0
  1116 ;;      Totals:         0       9       0       0       0
  1117 ;;Total ram usage:        9 bytes
  1118 ;; Hardware stack levels used: 1
  1119 ;; Hardware stack levels required when called: 1
  1120 ;; This function calls:
  1121 ;;		Nothing
  1122 ;; This function is called by:
  1123 ;;		_calculos
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127  00A4                     ___awdiv:	
  1128                           ;psect for function ___awdiv
  1129                           
  1130  00A4                     l969:	
  1131                           ;incstack = 0
  1132                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1133                           
  1134  00A4  1283               	bcf	3,5	;RP0=0, select bank0
  1135  00A5  1303               	bcf	3,6	;RP1=0, select bank0
  1136  00A6  01AC               	clrf	___awdiv@sign
  1137  00A7                     l971:
  1138  00A7  1FA7               	btfss	___awdiv@divisor+1,7
  1139  00A8  28AA               	goto	u281
  1140  00A9  28AB               	goto	u280
  1141  00AA                     u281:
  1142  00AA  28B2               	goto	l977
  1143  00AB                     u280:
  1144  00AB                     l973:
  1145  00AB  09A6               	comf	___awdiv@divisor,f
  1146  00AC  09A7               	comf	___awdiv@divisor+1,f
  1147  00AD  0AA6               	incf	___awdiv@divisor,f
  1148  00AE  1903               	skipnz
  1149  00AF  0AA7               	incf	___awdiv@divisor+1,f
  1150  00B0                     l975:
  1151  00B0  01AC               	clrf	___awdiv@sign
  1152  00B1  0AAC               	incf	___awdiv@sign,f
  1153  00B2                     l977:
  1154  00B2  1FA9               	btfss	___awdiv@dividend+1,7
  1155  00B3  28B5               	goto	u291
  1156  00B4  28B6               	goto	u290
  1157  00B5                     u291:
  1158  00B5  28BF               	goto	l983
  1159  00B6                     u290:
  1160  00B6                     l979:
  1161  00B6  09A8               	comf	___awdiv@dividend,f
  1162  00B7  09A9               	comf	___awdiv@dividend+1,f
  1163  00B8  0AA8               	incf	___awdiv@dividend,f
  1164  00B9  1903               	skipnz
  1165  00BA  0AA9               	incf	___awdiv@dividend+1,f
  1166  00BB                     l981:
  1167  00BB  3001               	movlw	1
  1168  00BC  00AA               	movwf	??___awdiv
  1169  00BD  082A               	movf	??___awdiv,w
  1170  00BE  06AC               	xorwf	___awdiv@sign,f
  1171  00BF                     l983:
  1172  00BF  01AD               	clrf	___awdiv@quotient
  1173  00C0  01AE               	clrf	___awdiv@quotient+1
  1174  00C1                     l985:
  1175  00C1  0826               	movf	___awdiv@divisor,w
  1176  00C2  0427               	iorwf	___awdiv@divisor+1,w
  1177  00C3  1903               	btfsc	3,2
  1178  00C4  28C6               	goto	u301
  1179  00C5  28C7               	goto	u300
  1180  00C6                     u301:
  1181  00C6  28FE               	goto	l1005
  1182  00C7                     u300:
  1183  00C7                     l987:
  1184  00C7  01AB               	clrf	___awdiv@counter
  1185  00C8  0AAB               	incf	___awdiv@counter,f
  1186  00C9  28D5               	goto	l993
  1187  00CA                     l989:
  1188  00CA  3001               	movlw	1
  1189  00CB                     u315:
  1190  00CB  1003               	clrc
  1191  00CC  0DA6               	rlf	___awdiv@divisor,f
  1192  00CD  0DA7               	rlf	___awdiv@divisor+1,f
  1193  00CE  3EFF               	addlw	-1
  1194  00CF  1D03               	skipz
  1195  00D0  28CB               	goto	u315
  1196  00D1                     l991:
  1197  00D1  3001               	movlw	1
  1198  00D2  00AA               	movwf	??___awdiv
  1199  00D3  082A               	movf	??___awdiv,w
  1200  00D4  07AB               	addwf	___awdiv@counter,f
  1201  00D5                     l993:
  1202  00D5  1FA7               	btfss	___awdiv@divisor+1,7
  1203  00D6  28D8               	goto	u321
  1204  00D7  28D9               	goto	u320
  1205  00D8                     u321:
  1206  00D8  28CA               	goto	l989
  1207  00D9                     u320:
  1208  00D9                     l995:
  1209  00D9  3001               	movlw	1
  1210  00DA                     u335:
  1211  00DA  1003               	clrc
  1212  00DB  0DAD               	rlf	___awdiv@quotient,f
  1213  00DC  0DAE               	rlf	___awdiv@quotient+1,f
  1214  00DD  3EFF               	addlw	-1
  1215  00DE  1D03               	skipz
  1216  00DF  28DA               	goto	u335
  1217  00E0  0827               	movf	___awdiv@divisor+1,w
  1218  00E1  0229               	subwf	___awdiv@dividend+1,w
  1219  00E2  1D03               	skipz
  1220  00E3  28E6               	goto	u345
  1221  00E4  0826               	movf	___awdiv@divisor,w
  1222  00E5  0228               	subwf	___awdiv@dividend,w
  1223  00E6                     u345:
  1224  00E6  1C03               	skipc
  1225  00E7  28E9               	goto	u341
  1226  00E8  28EA               	goto	u340
  1227  00E9                     u341:
  1228  00E9  28F1               	goto	l1001
  1229  00EA                     u340:
  1230  00EA                     l997:
  1231  00EA  0826               	movf	___awdiv@divisor,w
  1232  00EB  02A8               	subwf	___awdiv@dividend,f
  1233  00EC  0827               	movf	___awdiv@divisor+1,w
  1234  00ED  1C03               	skipc
  1235  00EE  03A9               	decf	___awdiv@dividend+1,f
  1236  00EF  02A9               	subwf	___awdiv@dividend+1,f
  1237  00F0                     l999:
  1238  00F0  142D               	bsf	___awdiv@quotient,0
  1239  00F1                     l1001:
  1240  00F1  3001               	movlw	1
  1241  00F2                     u355:
  1242  00F2  1003               	clrc
  1243  00F3  0CA7               	rrf	___awdiv@divisor+1,f
  1244  00F4  0CA6               	rrf	___awdiv@divisor,f
  1245  00F5  3EFF               	addlw	-1
  1246  00F6  1D03               	skipz
  1247  00F7  28F2               	goto	u355
  1248  00F8                     l1003:
  1249  00F8  3001               	movlw	1
  1250  00F9  02AB               	subwf	___awdiv@counter,f
  1251  00FA  1D03               	btfss	3,2
  1252  00FB  28FD               	goto	u361
  1253  00FC  28FE               	goto	u360
  1254  00FD                     u361:
  1255  00FD  28D9               	goto	l995
  1256  00FE                     u360:
  1257  00FE                     l1005:
  1258  00FE  082C               	movf	___awdiv@sign,w
  1259  00FF  1903               	btfsc	3,2
  1260  0100  2902               	goto	u371
  1261  0101  2903               	goto	u370
  1262  0102                     u371:
  1263  0102  2908               	goto	l1009
  1264  0103                     u370:
  1265  0103                     l1007:
  1266  0103  09AD               	comf	___awdiv@quotient,f
  1267  0104  09AE               	comf	___awdiv@quotient+1,f
  1268  0105  0AAD               	incf	___awdiv@quotient,f
  1269  0106  1903               	skipnz
  1270  0107  0AAE               	incf	___awdiv@quotient+1,f
  1271  0108                     l1009:
  1272  0108  082E               	movf	___awdiv@quotient+1,w
  1273  0109  00A7               	movwf	?___awdiv+1
  1274  010A  082D               	movf	___awdiv@quotient,w
  1275  010B  00A6               	movwf	?___awdiv
  1276  010C                     l338:
  1277  010C  0008               	return
  1278  010D                     __end_of___awdiv:
  1279                           
  1280                           	psect	text6
  1281  010D                     __ptext6:	
  1282 ;; *************** function _isr *****************
  1283 ;; Defined at:
  1284 ;;		line 45 in file "main.c"
  1285 ;; Parameters:    Size  Location     Type
  1286 ;;		None
  1287 ;; Auto vars:     Size  Location     Type
  1288 ;;		None
  1289 ;; Return value:  Size  Location     Type
  1290 ;;                  1    wreg      void 
  1291 ;; Registers used:
  1292 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1293 ;; Tracked objects:
  1294 ;;		On entry : 0/0
  1295 ;;		On exit  : 0/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1298 ;;      Params:         0       0       0       0       0
  1299 ;;      Locals:         0       0       0       0       0
  1300 ;;      Temps:          5       0       0       0       0
  1301 ;;      Totals:         5       0       0       0       0
  1302 ;;Total ram usage:        5 bytes
  1303 ;; Hardware stack levels used: 1
  1304 ;; This function calls:
  1305 ;;		Nothing
  1306 ;; This function is called by:
  1307 ;;		Interrupt level 1
  1308 ;; This function uses a non-reentrant model
  1309 ;;
  1310                           
  1311  010D                     _isr:	
  1312                           ;psect for function _isr
  1313                           
  1314  010D                     i1l1027:
  1315                           
  1316                           ;main.c: 46:     if(INTCONbits.T0IF){
  1317  010D  1D0B               	btfss	11,2	;volatile
  1318  010E  2910               	goto	u38_21
  1319  010F  2911               	goto	u38_20
  1320  0110                     u38_21:
  1321  0110  294C               	goto	i1l73
  1322  0111                     u38_20:
  1323  0111                     i1l1029:
  1324                           
  1325                           ;main.c: 47:         INTCONbits.T0IF = 0;
  1326  0111  110B               	bcf	11,2	;volatile
  1327  0112                     i1l1031:
  1328                           
  1329                           ;main.c: 48:         TMR0 = 255;
  1330  0112  30FF               	movlw	255
  1331  0113  1283               	bcf	3,5	;RP0=0, select bank0
  1332  0114  1303               	bcf	3,6	;RP1=0, select bank0
  1333  0115  0081               	movwf	1	;volatile
  1334                           
  1335                           ;main.c: 50:         switch(ttmr0){
  1336  0116  2938               	goto	i1l1061
  1337  0117                     i1l1033:
  1338                           
  1339                           ;main.c: 52:                 PORTE = 0;
  1340  0117  0189               	clrf	9	;volatile
  1341  0118                     i1l1035:
  1342                           
  1343                           ;main.c: 53:                 PORTC = valores[CEN];
  1344  0118  0876               	movf	_CEN,w
  1345  0119  3E34               	addlw	(low (_valores| 0))& (0+255)
  1346  011A  0084               	movwf	4
  1347  011B  1383               	bcf	3,7	;select IRP bank0
  1348  011C  0800               	movf	0,w
  1349  011D  0087               	movwf	7	;volatile
  1350  011E                     i1l1037:
  1351                           
  1352                           ;main.c: 54:                 PORTEbits.RE0 = 1;
  1353  011E  1409               	bsf	9,0	;volatile
  1354  011F                     i1l1039:
  1355                           
  1356                           ;main.c: 55:                 PORTCbits.RC7 = 1;
  1357  011F  1787               	bsf	7,7	;volatile
  1358  0120                     i1l1041:
  1359                           
  1360                           ;main.c: 56:                 ttmr0++;
  1361  0120  3001               	movlw	1
  1362  0121  00F0               	movwf	??_isr
  1363  0122  0870               	movf	??_isr,w
  1364  0123  07F5               	addwf	_ttmr0,f
  1365                           
  1366                           ;main.c: 57:                 break;
  1367  0124  294B               	goto	i1l76
  1368  0125                     i1l1043:
  1369                           
  1370                           ;main.c: 60:                 PORTE = 0;
  1371  0125  0189               	clrf	9	;volatile
  1372  0126                     i1l1045:
  1373                           
  1374                           ;main.c: 61:                 PORTC = valores[DECC];
  1375  0126  0877               	movf	_DECC,w
  1376  0127  3E34               	addlw	(low (_valores| 0))& (0+255)
  1377  0128  0084               	movwf	4
  1378  0129  1383               	bcf	3,7	;select IRP bank0
  1379  012A  0800               	movf	0,w
  1380  012B  0087               	movwf	7	;volatile
  1381  012C                     i1l1047:
  1382                           
  1383                           ;main.c: 62:                 PORTEbits.RE1 = 1;
  1384  012C  1489               	bsf	9,1	;volatile
  1385  012D  2920               	goto	i1l1041
  1386  012E                     i1l1051:
  1387                           
  1388                           ;main.c: 67:                 PORTE = 0;
  1389  012E  0189               	clrf	9	;volatile
  1390  012F                     i1l1053:
  1391                           
  1392                           ;main.c: 68:                 PORTC = valores[UNI];
  1393  012F  0878               	movf	_UNI,w
  1394  0130  3E34               	addlw	(low (_valores| 0))& (0+255)
  1395  0131  0084               	movwf	4
  1396  0132  1383               	bcf	3,7	;select IRP bank0
  1397  0133  0800               	movf	0,w
  1398  0134  0087               	movwf	7	;volatile
  1399  0135                     i1l1055:
  1400                           
  1401                           ;main.c: 69:                 PORTEbits.RE2 = 1;
  1402  0135  1509               	bsf	9,2	;volatile
  1403  0136                     i1l1057:
  1404                           
  1405                           ;main.c: 70:                 ttmr0 = 0;
  1406  0136  01F5               	clrf	_ttmr0
  1407                           
  1408                           ;main.c: 71:                 break;
  1409  0137  294B               	goto	i1l76
  1410  0138                     i1l1061:
  1411  0138  0875               	movf	_ttmr0,w
  1412  0139  00F0               	movwf	??_isr
  1413  013A  01F1               	clrf	??_isr+1
  1414                           
  1415                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1416                           ; Switch size 1, requested type "simple"
  1417                           ; Number of cases is 1, Range of values is 0 to 0
  1418                           ; switch strategies available:
  1419                           ; Name         Instructions Cycles
  1420                           ; simple_byte            4     3 (average)
  1421                           ; direct_byte           11     8 (fixed)
  1422                           ; jumptable            260     6 (fixed)
  1423                           ;	Chosen strategy is simple_byte
  1424  013B  0871               	movf	??_isr+1,w
  1425  013C  3A00               	xorlw	0	; case 0
  1426  013D  1903               	skipnz
  1427  013E  2940               	goto	i1l1219
  1428  013F  294B               	goto	i1l76
  1429  0140                     i1l1219:
  1430                           
  1431                           ; Switch size 1, requested type "simple"
  1432                           ; Number of cases is 3, Range of values is 0 to 2
  1433                           ; switch strategies available:
  1434                           ; Name         Instructions Cycles
  1435                           ; simple_byte           10     6 (average)
  1436                           ; direct_byte           17     8 (fixed)
  1437                           ; jumptable            260     6 (fixed)
  1438                           ;	Chosen strategy is simple_byte
  1439  0140  0870               	movf	??_isr,w
  1440  0141  3A00               	xorlw	0	; case 0
  1441  0142  1903               	skipnz
  1442  0143  2917               	goto	i1l1033
  1443  0144  3A01               	xorlw	1	; case 1
  1444  0145  1903               	skipnz
  1445  0146  2925               	goto	i1l1043
  1446  0147  3A03               	xorlw	3	; case 2
  1447  0148  1903               	skipnz
  1448  0149  292E               	goto	i1l1051
  1449  014A  294B               	goto	i1l76
  1450  014B                     i1l76:
  1451                           
  1452                           ;main.c: 73:         INTCONbits.T0IF = 0;
  1453  014B  110B               	bcf	11,2	;volatile
  1454  014C                     i1l73:	
  1455                           ;main.c: 74:     }
  1456                           
  1457                           
  1458                           ;main.c: 75:     if(PIR1bits.ADIF){
  1459  014C  1283               	bcf	3,5	;RP0=0, select bank0
  1460  014D  1303               	bcf	3,6	;RP1=0, select bank0
  1461  014E  1F0C               	btfss	12,6	;volatile
  1462  014F  2951               	goto	u39_21
  1463  0150  2952               	goto	u39_20
  1464  0151                     u39_21:
  1465  0151  2961               	goto	i1l82
  1466  0152                     u39_20:
  1467  0152                     i1l1063:
  1468                           
  1469                           ;main.c: 76:         if(ADCON0bits.CHS == 11){
  1470  0152  0C1F               	rrf	31,w	;volatile
  1471  0153  00F0               	movwf	??_isr
  1472  0154  0C70               	rrf	??_isr,w
  1473  0155  390F               	andlw	15
  1474  0156  3A0B               	xorlw	11
  1475  0157  1D03               	skipz
  1476  0158  295A               	goto	u40_21
  1477  0159  295B               	goto	u40_20
  1478  015A                     u40_21:
  1479  015A  295E               	goto	i1l1067
  1480  015B                     u40_20:
  1481  015B                     i1l1065:
  1482                           
  1483                           ;main.c: 77:             PORTA = ADRESH;
  1484  015B  081E               	movf	30,w	;volatile
  1485  015C  0085               	movwf	5	;volatile
  1486                           
  1487                           ;main.c: 78:         }
  1488  015D  2960               	goto	i1l1069
  1489  015E                     i1l1067:
  1490                           
  1491                           ;main.c: 80:             PORTD = ADRESH;
  1492  015E  081E               	movf	30,w	;volatile
  1493  015F  0088               	movwf	8	;volatile
  1494  0160                     i1l1069:
  1495                           
  1496                           ;main.c: 81:         PIR1bits.ADIF = 0;
  1497  0160  130C               	bcf	12,6	;volatile
  1498  0161                     i1l82:
  1499  0161  0874               	movf	??_isr+4,w
  1500  0162  008A               	movwf	10
  1501  0163  0873               	movf	??_isr+3,w
  1502  0164  0084               	movwf	4
  1503  0165  0E72               	swapf	??_isr+2,w
  1504  0166  0083               	movwf	3
  1505  0167  0EFE               	swapf	btemp,f
  1506  0168  0E7E               	swapf	btemp,w
  1507  0169  0009               	retfie
  1508  016A                     __end_of_isr:
  1509  007E                     btemp	set	126	;btemp
  1510  007E                     wtemp0	set	126
  1511                           
  1512                           	psect	intentry
  1513  0004                     __pintentry:	
  1514                           ;incstack = 0
  1515                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  1516                           
  1517  0004                     interrupt_function:
  1518  007E                     saved_w	set	btemp
  1519  0004  00FE               	movwf	btemp
  1520  0005  0E03               	swapf	3,w
  1521  0006  00F2               	movwf	??_isr+2
  1522  0007  0804               	movf	4,w
  1523  0008  00F3               	movwf	??_isr+3
  1524  0009  080A               	movf	10,w
  1525  000A  00F4               	movwf	??_isr+4
  1526  000B  120A  118A  290D   	ljmp	_isr
  1527                           
  1528                           	psect	idloc
  1529                           
  1530                           ;Config register IDLOC0 @ 0x2000
  1531                           ;	unspecified, using default values
  1532  2000                     	org	8192
  1533  2000  3FFF               	dw	16383
  1534                           
  1535                           ;Config register IDLOC1 @ 0x2001
  1536                           ;	unspecified, using default values
  1537  2001                     	org	8193
  1538  2001  3FFF               	dw	16383
  1539                           
  1540                           ;Config register IDLOC2 @ 0x2002
  1541                           ;	unspecified, using default values
  1542  2002                     	org	8194
  1543  2002  3FFF               	dw	16383
  1544                           
  1545                           ;Config register IDLOC3 @ 0x2003
  1546                           ;	unspecified, using default values
  1547  2003                     	org	8195
  1548  2003  3FFF               	dw	16383
  1549                           
  1550                           	psect	config
  1551                           
  1552                           ;Config register CONFIG1 @ 0x2007
  1553                           ;	Oscillator Selection bits
  1554                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1555                           ;	Watchdog Timer Enable bit
  1556                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1557                           ;	Power-up Timer Enable bit
  1558                           ;	PWRTE = OFF, PWRT disabled
  1559                           ;	RE3/MCLR pin function select bit
  1560                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1561                           ;	Code Protection bit
  1562                           ;	CP = OFF, Program memory code protection is disabled
  1563                           ;	Data Code Protection bit
  1564                           ;	CPD = OFF, Data memory code protection is disabled
  1565                           ;	Brown Out Reset Selection bits
  1566                           ;	BOREN = OFF, BOR disabled
  1567                           ;	Internal External Switchover bit
  1568                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1569                           ;	Fail-Safe Clock Monitor Enabled bit
  1570                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1571                           ;	Low Voltage Programming Enable bit
  1572                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1573                           ;	In-Circuit Debugger Mode bit
  1574                           ;	DEBUG = 0x1, unprogrammed default
  1575  2007                     	org	8199
  1576  2007  20D4               	dw	8404
  1577                           
  1578                           ;Config register CONFIG2 @ 0x2008
  1579                           ;	Brown-out Reset Selection bit
  1580                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1581                           ;	Flash Program Memory Self Write Enable bits
  1582                           ;	WRT = OFF, Write protection off
  1583  2008                     	org	8200
  1584  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80     20      36
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_calculos
    _calculos->___awdiv
    ___awdiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1236
                                             19 BANK0      1     1      0
                           _calculos
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calculos                                             4     4      0    1236
                                             15 BANK0      4     4      0
                            ___awdiv
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     316
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _calculos
     ___awdiv
       ___wmul (ARG)
     ___bmul
     ___wmul
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     14      24       5       45.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2D      12        0.0%
ABS                  0      0      2D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sat Apr 23 17:49:17 2022

                      pc 0002           ___bmul@product 0022                       l96 00A3  
                     l99 01AA             ___awdiv@sign 002C                       fsr 0004  
    ___wmul@multiplicand 0022                      l211 021A                      l185 01EB  
                    l338 010C                      l187 0203                      l801 018B  
                    l811 019B                      l803 018F                      l821 01A4  
                    l813 019C                      l805 0190                      l823 01A7  
                    l815 019F                      l807 0197                      l817 01A2  
                    l809 019A                      l819 01A3                      l771 0175  
                    l763 016A                      _CEN 0076                      l781 017C  
                    l773 0176                      l765 016D                      l791 0186  
                    l783 017D                      l775 0177                      l767 016F  
                    l793 0187                      l785 017E                      l777 017A  
                    l769 0174                      l971 00A7                      l795 0188  
                    l787 0184                      l779 017B                      l981 00BB  
                    l973 00AB                      l797 0189                      l789 0185  
                    l991 00D1                      l983 00BF                      l975 00B0  
                    l799 018A                      l993 00D5                      l985 00C1  
                    l977 00B2                      l969 00A4                      l995 00D9  
                    l987 00C7                      l979 00B6                      l997 00EA  
                    l989 00CA                      l999 00F0                      u300 00C7  
                    u301 00C6                      u320 00D9                      u321 00D8  
                    u315 00CB                      u340 00EA                      u500 01C5  
                    u341 00E9                      u501 01C4                      u430 01E5  
                    u335 00DA                      u431 01E4                      u360 00FE  
                    u280 00AB                      u361 00FD                      u345 00E6  
                    u281 00AA                      u370 0103                      u290 00B6  
                    u371 0102                      u355 00F2                      u291 00B5  
                    u460 01FF                      u461 01FE                      u445 01EC  
                    u470 020C                      u471 020B                      u455 01F3  
                    u480 0219                      u481 0218                      u490 01BC  
                    u491 01BB                      _UNI 0078                      _isr 010D  
                    fsr0 0004                      indf 0000                     l1001 00F1  
                   l1003 00F8                     l1005 00FE                     l1007 0103  
                   l1009 0108                     l1131 01E5                     l1141 0207  
                   l1133 01F2                     l1151 0219                     l1143 0208  
                   l1135 01F9                     l1127 01DD                     l1145 020C  
                   l1137 01FF                     l1129 01E1                     l1161 0049  
                   l1147 0210                     l1163 005C                     l1155 002D  
                   l1171 01B0                     l1149 0212                     l1165 0085  
                   l1157 0036                     l1181 01CA                     l1173 01B3  
                   l1159 0044                     l1183 01CE                     l1175 01B6  
                   l1185 01D1                     l1177 01BC                     l1169 01AB  
                   l1179 01C5                     l1187 01D4                     ?_isr 0070  
                   _DECC 0077                     i1l73 014C                     i1l82 0161  
                   i1l76 014B                     _TMR0 0001                     _main 01AB  
                   btemp 007E                     start 000E        ___bmul@multiplier 0023  
                  ??_isr 0070                    ?_main 0070          __end_of___awdiv 010D  
                  _ANSEL 0188          ___awdiv@divisor 0026          ___awdiv@counter 002B  
                  _SENAL 0040                    u40_20 015B                    u40_21 015A  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    u38_20 0111  
                  u38_21 0110                    u39_20 0152                    u39_21 0151  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _setup 016A  
                  _ttmr0 0075                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0011             __end_of_main 01DD  
                 ??_main 0033                   _ADRESH 001E         ___awdiv@dividend 0028  
                 ?_setup 0070                   _ANSELH 0189                   i1l1031 0112  
                 i1l1041 0120                   i1l1033 0117                   i1l1051 012E  
                 i1l1043 0125                   i1l1035 0118                   i1l1027 010D  
                 i1l1053 012F                   i1l1045 0126                   i1l1037 011E  
                 i1l1061 0138                   i1l1029 0111                   i1l1063 0152  
                 i1l1055 0135                   i1l1047 012C                   i1l1039 011F  
                 i1l1065 015B                   i1l1057 0136                   i1l1067 015E  
                 i1l1219 0140                   i1l1069 0160                   _SENAL2 003E  
       __end_of_calculos 00A4                   ___bmul 0204                   ___wmul 01DD  
              ??___awdiv 002A         ___awdiv@quotient 002D                   saved_w 007E  
__end_of__initialization 0029      ___bmul@multiplicand 0020           __pcstackCOMMON 0070  
           __pidataBANK0 022E            __end_of_setup 01AB           _OPTION_REGbits 0081  
                ??_setup 0075               __pbssBANK0 003E               __pmaintext 01AB  
                ?___bmul 0020                  ?___wmul 0020               __pintentry 0004  
              ?_calculos 0070                  ___awdiv 00A4                  __ptext1 016A  
                __ptext2 002D                  __ptext3 01DD                  __ptext4 0204  
                __ptext5 00A4                  __ptext6 010D               ??_calculos 002F  
                _valores 0034     end_of_initialization 0029                _PORTCbits 0007  
              _PORTEbits 0009           __end_of___bmul 021B           __end_of___wmul 0204  
    start_initialization 0011              __end_of_isr 016A            _POTENCIOMETRO 0042  
               ??___bmul 0021                 ??___wmul 0075               init_fetch0 021B  
            __pdataBANK0 0034              __pbssCOMMON 0075                ___latbits 0002  
          __pcstackBANK0 0020                 ?___awdiv 0026        interrupt_function 0004  
         ___wmul@product 0024                 _PIE1bits 008C                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F        ___wmul@multiplier 0020  
               _calculos 002D               _INTCONbits 000B                 init_ram0 021F  
               intlevel1 0000               _OSCCONbits 008F  
